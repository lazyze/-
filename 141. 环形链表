/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode *protect = new ListNode;
        protect->next = head;
        ListNode *slow = protect;
        ListNode *quick = protect->next;
        while (quick != NULL) {
            if(quick == slow)return true;
            slow = slow->next;
            if (quick->next == NULL) break;
            quick = quick->next->next;
        }
        return false;
    }
};
